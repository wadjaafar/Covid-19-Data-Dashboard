{"id":"node_modules/core-js-pure/internals/to-integer.js","dependencies":[{"name":"/Users/jaafaralmahy/Desktop/Projects/covid19-dashboard/package.json","includedInParent":true,"mtime":1630847048707},{"name":"/Users/jaafaralmahy/Desktop/Projects/covid19-dashboard/node_modules/core-js-pure/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js-pure/internals/to-integer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"node_modules/core-js-pure/internals/to-integer.js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n"},"lineCount":9}},"error":null,"hash":"c2ce82788a48f1780b613d76be4fee69","cacheData":{"env":{}}}